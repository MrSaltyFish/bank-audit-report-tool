{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/fishy/Data/Development/git-self-projects/bank-audit-report-tool/src/app/auth/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\n\nexport default function SignupPage() {\n    const router = useRouter();\n\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [message, setMessage] = useState({ type: \"\", text: \"\" });\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setMessage({ type: \"\", text: \"\" });\n\n        try {\n            const response = await fetch(\n                `${process.env.NEXT_PUBLIC_SERVER_URL}/api/auth/register`,\n                {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ username, email, password }),\n                },\n            );\n\n            const data = await response.json();\n            const text = data?.error ?? data ?? \"Unknown error\";\n            if (response.status === 201) {\n                setMessage({\n                    type: \"success\",\n                    text: \"Register successful! Redirecting to login...\",\n                });\n                setTimeout(() => {\n                    router.push(\"/auth/login\");\n                }, 1500);\n            } else {\n                setMessage({\n                    type: \"warning\",\n                    text:\n                        JSON.stringify(data.error) || \"Register failed. Please try again.\",\n                });\n            }\n        } catch (error) {\n            console.error(\"Register Error:\", error);\n            setMessage({\n                type: \"error\",\n                text: \"Something went wrong. Please try again later.\",\n            });\n        }\n    };\n\n    const alertStyle =\n        {\n            success: \"bg-green-100 text-green-700\",\n            warning: \"bg-yellow-100 text-yellow-800\",\n            error: \"bg-red-100 text-red-700\",\n        }[message.type] ?? \"\";\n\n    return (\n        <div className=\"min-h-screen flex flex-col text-black\">\n            <main className=\"flex-grow flex items-center justify-center px-4\">\n                <div className=\"w-full max-w-md bg-white rounded-lg shadow-lg p-8\">\n                    <h2 className=\"text-2xl font-semibold text-center mb-6\">\n                        Create an Account\n                    </h2>\n                    <form onSubmit={handleSubmit} className=\"space-y-4 \">\n                        <div>\n                            <label htmlFor=\"username\" className=\"block font-medium\">\n                                Username\n                            </label>\n                            <input\n                                id=\"username\"\n                                type=\"text\"\n                                required\n                                className=\"mt-1 w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            />\n                        </div>\n                        <div>\n                            <label htmlFor=\"email\" className=\"block font-medium\">\n                                Email\n                            </label>\n                            <input\n                                id=\"email\"\n                                type=\"email\"\n                                required\n                                className=\"mt-1 w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n                        <div>\n                            <label htmlFor=\"password\" className=\"block font-medium\">\n                                Password\n                            </label>\n                            <input\n                                id=\"password\"\n                                type=\"password\"\n                                required\n                                className=\"mt-1 w-full border rounded px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        {message.text && (\n                            <div className={`text-sm rounded px-3 py-2 ${alertStyle}`}>\n                                {message.text}\n                            </div>\n                        )}\n\n                        <button\n                            type=\"submit\"\n                            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 rounded transition\"\n                        >\n                            Register\n                        </button>\n                    </form>\n\n                    <div className=\"mt-4 text-center text-sm\">\n                        Already have an account?{\" \"}\n                        <Link href=\"/auth/login\" className=\"text-blue-600 hover:underline\">\n                            Login\n                        </Link>\n                    </div>\n                </div>\n            </main>\n        </div>\n    );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}